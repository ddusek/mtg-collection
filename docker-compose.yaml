version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: mtg-redis
    build:
      context: ./
      dockerfile: Redis.Dockerfile
    ports:
      - 6379:6379
    networks:
      - mtg
    volumes:
      - ./mtg_collection/config:/app/config
      - ./mtg_collection/database:/app/database
      - ./mtg_collection/data:/data

  mongo:
    image: mongo:latest
    container_name: mtg-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mtg-admin
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: mtg-collection
    ports:
      - 27017:27017
    networks:
      - mtg
    volumes:
      - ./scripts/mongo-entrypoint.js:/docker-entrypoint-initdb.d/mongo-entrypoint.js:ro
    depends_on: 
      - redis
  starlette:
    container_name: mtg-starlette
    build:
      context: ./
      dockerfile: Starlette.Dockerfile
    ports:
      - 8000:8000
    networks:
      - mtg
    volumes:
      - ./mtg_collection/api:/mtg_collection/api
      - ./mtg_collection/database:/mtg_collection/database
      - ./mtg_collection/data:/mtg_collection/data
      - ./mtg_collection/constants.py:/mtg_collection/constants.py
    env_file:
      - dev.env
    depends_on:
      - redis
      - mongo

  frontend:
    container_name: mtg-frontend
    build:
      context: ./
      dockerfile: Frontend.Dockerfile
    ports: 
      - 8080:8080
    networks:
      - mtg
    volumes:
      - ./frontend/src:/app/src

networks:
  mtg:
    driver: bridge
